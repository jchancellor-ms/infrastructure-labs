#cloud-config
package_update: true
runcmd:
  - [ apt-get, install, -y, apt-transport-https, ca-certificates, curl ]
  - [ curl, -fsSLo, "/etc/apt/keyrings/kubernetes-archive-keyring.gpg", "https://packages.cloud.google.com/apt/doc/apt-key.gpg"]
  - echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
  - [ apt-get, update ]  
  - [ snap, install, jq]
  # disable swap per kubernetes best practice
  - [ swapoff, -a ]
  - sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  # configure the kubernetes related firewall rules
  - ufw allow 179/tcp
  - ufw allow 4789/udp
  - ufw allow 6443/tcp
  - ufw allow 2379/tcp
  - ufw allow 2380/tcp
  - ufw allow 10250/tcp
  - ufw allow 10251/tcp
  - ufw allow 10252/tcp
  - ufw allow 10255/tcp
  - ufw allow 51820/udp
  - ufw allow 51821/udp
  - ufw reload
  # Set kernel parameters for containerd
  - |
    cat <<EOF | tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF
  - modprobe overlay
  - modprobe br_netfilter
    # sysctl params required by setup, params persist across reboots
  - |
    cat <<EOF | tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF
    # Apply sysctl params without reboot
  - sysctl --system
  # install containerd
  - version=$(curl -SL "https://api.github.com/repos/containerd/containerd/releases/latest" | jq -r ".tag_name")
  - wget "https://github.com/containerd/containerd/releases/download/$${version}/containerd-$${version#v}-linux-amd64.tar.gz"
  - tar Cxzvf /usr/local containerd-$${version#v}-linux-amd64.tar.gz
  - curl -o /usr/lib/systemd/system/containerd.service "https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
  - [ systemctl, daemon-reload ]
  - [ systemctl, enable, --now, containerd ]
  - runcversion=$(curl -SL https://api.github.com/repos/opencontainers/runc/releases/latest | jq -r ".tag_name")
  - wget "https://github.com/opencontainers/runc/releases/download/$${runcversion}/runc.amd64"
  - install -m 755 runc.amd64 /usr/local/sbin/runc 
  - cniversion=$(curl -SL https://api.github.com/repos/containernetworking/plugins/releases/latest | jq -r ".tag_name")
  - wget "https://github.com/containernetworking/plugins/releases/download/$${cniversion}/cni-plugins-linux-amd64-$${cniversion}.tgz"
  - [ mkdir, -p, /opt/cni/bin]
  - tar Cxzvf /opt/cni/bin "cni-plugins-linux-amd64-$${cniversion}.tgz"
  # explicitly set containerd config.toml to default 
  - mkdir /etc/containerd
  - containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  #install kubernetes tools
  - [ apt-get, install, -y, kubelet, kubeadm, kubectl ]
  - [ systemctl, restart, containerd.service ]
  - [ apt-mark, hold, kubelet, kubeadm, kubectl ]
  #bootstrap kubernetes control plane
  - kubeadm config images pull
  - kubeadm init --pod-network-cidr=192.168.0.0/16 --token ${node_token_value} 
  - export KUBECONFIG=/etc/kubernetes/admin.conf
  - calicoversion=$(curl -SL https://api.github.com/repos/projectcalico/calico/releases/latest | jq -r ".tag_name")
  - kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/$${calicoversion}/manifests/tigera-operator.yaml
  - kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/$${calicoversion}/manifests/custom-resources.yaml
  #install and sign in the cli
  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
  - az login --identity --allow-no-subscriptions
  - export CAHASH=$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //')
  - az keyvault secret set --vault-name "${vault_name}" --name "${hash_name}" --value $CAHASH
  - export KVER=$(kubectl version -o json | jq '.serverVersion.gitVersion')
  - az keyvault secret set --vault-name "${vault_name}" --name "${version_name}" --value $KVER
  - az keyvault secret set --vault-name "${vault_name}" --name "${conf_secret_name}" --file /etc/kubernetes/admin.conf




 ##add this if needed?
#curl -L https://raw.githubusercontent.com/kubernetes-sigs/sig-windows-tools/master/hostprocess/calico/kube-proxy/kube-proxy.yml | sed 's/KUBE_PROXY_VERSION/v1.25.3/g' | kubectl apply -f -
#curl -L https://raw.githubusercontent.com/kubernetes-sigs/sig-windows-tools/master/hostprocess/calico/calico.yml | sed 's/CALICO_VERSION/$CALICO_VERSION/g' | kubectl apply -f -
#kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/sig-windows-tools/master/hostprocess/calico/kube-calico-rbac.yml




